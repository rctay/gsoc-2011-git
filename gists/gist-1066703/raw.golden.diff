diff --git a/xdiff/xhistogram.c b/xdiff/xhistogram.c
index ea7b82d..bf1c2e5 100644
--- a/xdiff/xhistogram.c
+++ b/xdiff/xhistogram.c
@@ -66,8 +66,38 @@ static int cmp_recs(xpparam_t const *xpp, xdfenv_t *env,
 #define cmp(i, s1, l1, s2, l2) \
 	(cmp_env(i->xpp, i->env, s1, l1, s2, l2))
 
+/*
+ * From http://en.wikipedia.org/wiki/Binary_logarithm#Integer
+ */
+static int int_log2(unsigned int n)
+{
+	int pos;
+
+	if (n == 0)
+		return -1;
+
+
+	pos = 0;
+	if (n >= (1 <<16)) { n >>= 16; pos += 16; }
+	if (n >= (1 << 8)) { n >>=  8; pos +=  8; }
+	if (n >= (1 << 4)) { n >>=  4; pos +=  4; }
+	if (n >= (1 << 2)) { n >>=  2; pos +=  2; }
+	if (n >= (1 << 1)) {           pos +=  1; }
+	return pos;
+}
+
+static int table_bits(unsigned int size)
+{
+	int bits = int_log2(size);
+	if (bits == 0)
+		bits = 1;
+	if (1 << bits < size)
+		bits++;
+	return bits;
+}
+
 #define table_hash(index, side, line) \
-	XDL_HASHLONG((get_rec(index->env, side, line))->ha, index->table_bits)
+	(((unsigned int) ((get_rec(index->env, side, line))->ha * 0x9e370001UL)) >> (32-index->table_bits))
 
 static int scanA(struct histindex *index, int line1, int count1)
 {
@@ -271,7 +301,7 @@ static int histogram_diff(xpparam_t const *xpp, xdfenv_t *env,
 	index.next = NULL;
 	index.rec_idxs = NULL;
 
-	index.table_bits = xdl_hashbits(count1);
+	index.table_bits = table_bits(count1);
 	sz = index.table_size = 1 << index.table_bits;
 	sz *= sizeof(int);
 	if (!(index.table = xdl_malloc(sz)))
