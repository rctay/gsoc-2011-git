From 068245939bbc3d12e8c8b8db743911adee0c1531 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Wed, 29 Jun 2011 21:08:19 +0800
Subject: [PATCH 11/37] shorten LINE_END macro calls

---
 xdiff/xhistogram.c |   17 +++++++++--------
 1 files changed, 9 insertions(+), 8 deletions(-)

diff --git a/xdiff/xhistogram.c b/xdiff/xhistogram.c
index 3e770a7..814ebbf 100644
--- a/xdiff/xhistogram.c
+++ b/xdiff/xhistogram.c
@@ -18,7 +18,8 @@
 	(((int) (r >> REC_PTR_SHIFT)) & REC_PTR_MASK)
 #define REC_CNT(a) (((int) a) & REC_CNT_MASK)
 
-#define LINE_END(s, c) (s+c-1)
+#define LINE_END(n) (line##n+count##n-1)
+#define LINE_END_PTR(n) (*line##n+*count##n-1)
 
 struct histindex {
 	int *table;
@@ -77,7 +78,7 @@ static int scanA(struct histindex *index, int line1, int count1)
 	int new_cnt;
 	long rec;
 
-	for (ptr = LINE_END(line1, count1); line1 <= ptr; ptr--) {
+	for (ptr = LINE_END(1); line1 <= ptr; ptr--) {
 		tbl_idx = table_hash(index, 1, ptr);
 
 		chain_len = 0;
@@ -156,7 +157,7 @@ static int try_lcs(struct histindex *index, struct region *lcs, int b_ptr,
 				if (1 < rc)
 					rc = XDL_MIN(rc, REC_CNT(index->recs[INDEX_REC_IDXS(index, as)]));
 			}
-			while (ae < LINE_END(line1, count1) && be < LINE_END(line2, count2)
+			while (ae < LINE_END(1) && be < LINE_END(2)
 				&& cmp(index, 1, ae+1, 2, be+1)) {
 				if (1 < rc)
 					rc = XDL_MIN(rc, REC_CNT(index->recs[INDEX_REC_IDXS(index, ae)]));
@@ -203,7 +204,7 @@ static int find_lcs(struct histindex *index, struct region *lcs,
 
 	index->cnt = index->max_chain_length + 1;
 
-	for (b_ptr = line2; b_ptr <= LINE_END(line2, count2); )
+	for (b_ptr = line2; b_ptr <= LINE_END(2); )
 		b_ptr = try_lcs(index, lcs, b_ptr, line1, count1, line2, count2);
 
 	return index->has_common && index->max_chain_length < index->cnt;
@@ -220,7 +221,7 @@ static void reduce_common_start_end(struct histindex *index,
 		(*line2)++;
 		(*count2)--;
 	}
-	while (*count1 > 1 && *count2 > 1 && cmp(index, 1, LINE_END(*line1, *count1), 2, LINE_END(*line2, *count2))) {
+	while (*count1 > 1 && *count2 > 1 && cmp(index, 1, LINE_END_PTR(1), 2, LINE_END_PTR(2))) {
 		(*count1)--;
 		(*count2)--;
 	}
@@ -262,7 +263,7 @@ static int histogram_diff(struct histindex *index,
 	memset(index->next, 0, index->size * sizeof(int));
 	memset(index->rec_idxs, 0, index->size * sizeof(int));
 
-	if (LINE_END(line1, count1) >= MAX_PTR)
+	if (LINE_END(1) >= MAX_PTR)
 		return -1;
 
 	memset(&lcs, 0, sizeof(lcs));
@@ -281,8 +282,8 @@ static int histogram_diff(struct histindex *index,
 				line1, lcs.begin1 - line1,
 				line2, lcs.begin2 - line2);
 			histogram_diff(index,
-				lcs.end1 + 1, LINE_END(line1, count1) - lcs.end1,
-				lcs.end2 + 1, LINE_END(line2, count2) - lcs.end2);
+				lcs.end1 + 1, LINE_END(1) - lcs.end1,
+				lcs.end2 + 1, LINE_END(2) - lcs.end2);
 			result = 0;
 		}
 	}
-- 
1.7.6.12.g6486a.dirty

