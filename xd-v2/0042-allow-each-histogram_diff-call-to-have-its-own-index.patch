From 4e0ac20948dc73ebbff9a47836a6a42935d730b1 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Mon, 4 Jul 2011 13:09:10 +0800
Subject: [PATCH 42/49] allow each histogram_diff() call to have its own index

---
 xdiff/xhistogram.c |   96 +++++++++++++++++++++++++++-------------------------
 1 files changed, 50 insertions(+), 46 deletions(-)

diff --git a/xdiff/xhistogram.c b/xdiff/xhistogram.c
index 9a585f4..d784502 100644
--- a/xdiff/xhistogram.c
+++ b/xdiff/xhistogram.c
@@ -31,18 +31,29 @@ struct region {
 
 #define LINE_MAP(i, a) (i->line_map[(a) - i->ptr_shift])
 
+static xdfile_t *map_env_side(xdfenv_t *env, int s)
+{
+	return s == 1 ? &env->xdf1 : &env->xdf2;
+}
+
 static xdfile_t *map_side(struct histindex *index, int s)
 {
-	return s == 1 ? &index->env->xdf1 : &index->env->xdf2;
+	return map_env_side(index->env, s);
 }
 
-static int cmp(struct histindex *index,
+static int cmp_env(xpparam_t const *xpp, xdfenv_t *env,
 	int side1, long line1, int side2, long line2)
 {
-	xrecord_t *r1 = (map_side(index, side1))->recs[line1 - 1],
-		  *r2 = (map_side(index, side2))->recs[line2 - 1];
+	xrecord_t *r1 = (map_env_side(env, side1))->recs[line1 - 1],
+		  *r2 = (map_env_side(env, side2))->recs[line2 - 1];
 	return xdl_recmatch(r1->ptr, r1->size, r2->ptr, r2->size,
-			    index->xpp->flags);
+			    xpp->flags);
+}
+
+static int cmp(struct histindex *index,
+	int side1, long line1, int side2, long line2)
+{
+	return cmp_env(index->xpp, index->env, side1, line1, side2, line2);
 }
 
 static xrecord_t *table_hash(struct histindex *index, int side, unsigned long ha)
@@ -199,18 +210,18 @@ static int find_lcs(struct histindex *index, struct region *lcs,
 	return index->has_common && index->max_chain_length < index->cnt;
 }
 
-static void reduce_common_start_end(struct histindex *index,
+static void reduce_common_start_end(xpparam_t const *xpp, xdfenv_t *env,
 	long *line1, long *count1, long *line2, long *count2)
 {
 	if (*count1 <= 1 || *count2 <= 1)
 		return;
-	while (*count1 > 1 && *count2 > 1 && cmp(index, 1, *line1, 2, *line2)) {
+	while (*count1 > 1 && *count2 > 1 && cmp_env(xpp, env, 1, *line1, 2, *line2)) {
 		(*line1)++;
 		(*count1)--;
 		(*line2)++;
 		(*count2)--;
 	}
-	while (*count1 > 1 && *count2 > 1 && cmp(index, 1, LINE_END_PTR(1), 2, LINE_END_PTR(2))) {
+	while (*count1 > 1 && *count2 > 1 && cmp_env(xpp, env, 1, LINE_END_PTR(1), 2, LINE_END_PTR(2))) {
 		(*count1)--;
 		(*count2)--;
 	}
@@ -226,92 +237,85 @@ static int fall_back_to_classic_diff(struct histindex *index,
 				  line1, count1, line2, count2);
 }
 
-static int histogram_diff(struct histindex *index,
+static int histogram_diff(xpparam_t const *xpp, xdfenv_t *env,
 	long line1, long count1, long line2, long count2)
 {
+	struct histindex index;
 	struct region lcs;
-	int result;
+	int result = -1;
 
 	if (count1 <= 0 && count2 <= 0)
 		return 0;
 
 	if (!count1) {
 		while(count2--)
-			index->env->xdf2.rchg[line2++ - 1] = 1;
+			env->xdf2.rchg[line2++ - 1] = 1;
 		return 0;
 	} else if (!count2) {
 		while(count1--)
-			index->env->xdf1.rchg[line1++ - 1] = 1;
+			env->xdf1.rchg[line1++ - 1] = 1;
 		return 0;
 	}
 
-	index->ptr_shift = line1;
-	index->has_common = 0;
-	index->cnt = 0;
+	index.env = env;
+	index.xpp = xpp;
 
-	memset(index->line_map, 0, index->line_map_size * sizeof(struct record));
+	index.max_chain_length = 64;
+	index.ptr_shift = line1;
+	index.has_common = 0;
+	index.cnt = 0;
+
+	index.line_map_size = count1;
+	if (!(index.line_map = (struct record *)
+		xdl_malloc(count1 * sizeof(struct record))))
+		goto cleanup_line_map;
+
+	memset(index.line_map, 0, index.line_map_size * sizeof(struct record));
 
 	if (LINE_END(1) >= MAX_PTR)
-		return -1;
+		goto cleanup;
 
 	memset(&lcs, 0, sizeof(lcs));
-	if (find_lcs(index, &lcs, line1, count1, line2, count2))
-		result = fall_back_to_classic_diff(index, line1, count1, line2, count2);
+	if (find_lcs(&index, &lcs, line1, count1, line2, count2))
+		result = fall_back_to_classic_diff(&index, line1, count1, line2, count2);
 	else {
 		result = 0;
 		if (lcs.begin1 == 0 && lcs.begin2 == 0) {
 			int ptr;
 			for (ptr = 0; ptr < count1; ptr++)
-				index->env->xdf1.rchg[line1 + ptr - 1] = 1;
+				env->xdf1.rchg[line1 + ptr - 1] = 1;
 			for (ptr = 0; ptr < count2; ptr++)
-				index->env->xdf2.rchg[line2 + ptr - 1] = 1;
+				env->xdf2.rchg[line2 + ptr - 1] = 1;
 		} else {
-			result = result || histogram_diff(index,
+			result = result || histogram_diff(xpp, env,
 				line1, lcs.begin1 - line1,
 				line2, lcs.begin2 - line2);
-			result = result || histogram_diff(index,
+			result = result || histogram_diff(xpp, env,
 				lcs.end1 + 1, LINE_END(1) - lcs.end1,
 				lcs.end2 + 1, LINE_END(2) - lcs.end2);
 			result *= -1;
 		}
 	}
 
+cleanup:
+	xdl_free(index.line_map);
+cleanup_line_map:
 	return result;
 }
 
 int xdl_do_histogram_diff(mmfile_t *file1, mmfile_t *file2,
 	xpparam_t const *xpp, xdfenv_t *env)
 {
-	struct histindex index;
 	long line1, line2, count1, count2;
-	int result = -1;
 
 	if (xdl_prepare_env(file1, file2, xpp, env) < 0)
-		goto cleanup;
-
-	index.env = env;
-	index.xpp = xpp;
+		return -1;
 
 	line1 = line2 = 1;
 	count1 = env->xdf1.nrec;
 	count2 = env->xdf2.nrec;
 
- 	reduce_common_start_end(&index, &line1, &count1, &line2, &count2);
-
-	index.max_chain_length = 64;
+ 	reduce_common_start_end(xpp, env, &line1, &count1, &line2, &count2);
 
-	index.line_map_size = count1;
-	if (!(index.line_map = (struct record *)
-		xdl_malloc(index.line_map_size * sizeof(struct record))))
-		goto cleanup_line_map;
-
-	result = histogram_diff(&index,
-		line1, count1, line2, count2);
-
-	xdl_free(index.line_map);
-cleanup_line_map:
-cleanup:
-	; /* no-op */
-
-	return result;
+	return histogram_diff(xpp, env, line1, count1, line2, count2);
 }
-- 
1.7.6.12.g6486a.dirty

