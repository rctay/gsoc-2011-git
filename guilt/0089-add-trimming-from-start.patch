From 2cbb33a431ae88f488bfa912694f9e3155418e61 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 23:53:29 +0800
Subject: [PATCH 089/130] add trimming from start

---
 guilt/gsoc-diff/trim-ends |   85 +++++++++++++++++++++++++++++++-------------
 1 files changed, 60 insertions(+), 25 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index ad9df13..98cbc97 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,8 +1,18 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..1aec64b 100644
+index 3ebad0f..d738323 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
-@@ -130,6 +130,36 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -57,7 +57,8 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ static void xdl_free_ctx(xdfile_t *xdf);
+ static int xdl_clean_mmatch(char const *dis, long i, long s, long e);
+ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2);
+-static int xdl_trim_ends(xdfile_t *xdf1, xdfile_t *xdf2);
++static int xdl_trim_ends(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
++			 xdfile_t *xdf1, xdfile_t *xdf2);
+ static int xdl_optimize_ctxs(xdfile_t *xdf1, xdfile_t *xdf2);
+ 
+ 
+@@ -130,6 +131,43 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  }
  
  
@@ -10,27 +20,34 @@ index 3ebad0f..1aec64b 100644
 + * Early trim initial and terminal matching records.
 + */
 +static int xdl_trim_ends(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
-+	xdfile_t *xdf1, xdfile_t *xdf2) {
-+	long i, lim;
-+	xrecord_t **recs1, **recs2;
++			 xdfile_t *xdf1, xdfile_t *xdf2) {
++	long i, bsize;
++	char const *prev1, *prev2, *cur1, *cur2, *top1, *top2;
 +
-+	recs1 = xdf1->recs;
-+	recs2 = xdf2->recs;
-+	for (i = 0, lim = XDL_MIN(xdf1->nrec, xdf2->nrec); i < lim;
-+	     i++, recs1++, recs2++)
-+		if ((*recs1)->ha != (*recs2)->ha)
-+			break;
++	if ((cur1 = xdl_mmfile_first(mf1, &bsize)) == NULL)
++		return 0;
++	top1 = cur1 + bsize;
 +
-+	xdf1->dstart = xdf2->dstart = i;
++	if ((cur2 = xdl_mmfile_first(mf2, &bsize)) == NULL)
++		return 0;
++	top2 = cur2 + bsize;
 +
-+	recs1 = xdf1->recs + xdf1->nrec - 1;
-+	recs2 = xdf2->recs + xdf2->nrec - 1;
-+	for (lim -= i, i = 0; i < lim; i++, recs1--, recs2--)
-+		if ((*recs1)->ha != (*recs2)->ha)
++	/* TODO: trim on whitespace rules */
++	i = 0;
++	while (cur1 < top1 && cur2 < top2) {
++		prev1 = cur1;
++		prev2 = cur2;
++		cur1 = memchr(cur1, '\n', top1 - cur1);
++		cur2 = memchr(cur2, '\n', top2 - cur2);
++		if (!cur1 || !cur2
++			|| cur1 - prev1 != cur2 - prev2
++			|| memcmp(prev1, prev2, cur1 - prev1))
 +			break;
-+
-+	xdf1->dend = xdf1->nrec - i - 1;
-+	xdf2->dend = xdf2->nrec - i - 1;
++		cur1++;
++		cur2++;
++		i++;
++	}
++	xdf1->dstart = xdf2->dstart = i;
 +
 +	return 0;
 +}
@@ -39,20 +56,33 @@ index 3ebad0f..1aec64b 100644
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  			   xdlclassifier_t *cf, xdfile_t *xdf) {
  	unsigned int hbits;
-@@ -239,6 +269,12 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
- 
+@@ -164,7 +202,11 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 	if ((cur = blk = xdl_mmfile_first(mf, &bsize)) != NULL) {
+ 		for (top = blk + bsize; cur < top; ) {
+ 			prev = cur;
+-			hav = xdl_hash_record(&cur, top, xpp->flags);
++			if (nrec <= xdf->dstart) {
++				cur = memchr(cur, '\n', top - cur);
++				hav = 0;
++			} else
++				hav = xdl_hash_record(&cur, top, xpp->flags);
+ 			if (nrec >= narec) {
+ 				narec *= 2;
+ 				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
+@@ -240,6 +282,12 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
-+	
+ 
 +	if (xdl_trim_ends(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2) < 0) {
 +
 +		xdl_free_classifier(&cf);
 +		return -1;
 +	}
- 
++
  	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {
  
-@@ -403,35 +439,6 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+ 		xdl_free_classifier(&cf);
+@@ -403,39 +451,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
@@ -87,4 +117,9 @@ index 3ebad0f..1aec64b 100644
 -
  static int xdl_optimize_ctxs(xdfile_t *xdf1, xdfile_t *xdf2) {
  
- 	if (xdl_trim_ends(xdf1, xdf2) < 0 ||
+-	if (xdl_trim_ends(xdf1, xdf2) < 0 ||
+-	    xdl_cleanup_records(xdf1, xdf2) < 0) {
++	if (xdl_cleanup_records(xdf1, xdf2) < 0) {
+ 
+ 		return -1;
+ 	}
-- 
1.7.4.msysgit.0

