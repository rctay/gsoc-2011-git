From cfa8801bdec9af69d152a8e4a2da363026c1029a Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 23:56:51 +0800
Subject: [PATCH 097/130] xdl_trim_ends: strip with blocks first

---
 guilt/gsoc-diff/trim-ends |   64 ++++++++++++++++++++++++++++++--------------
 1 files changed, 43 insertions(+), 21 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index 2e0daed..afb7f86 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,5 +1,5 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..9178626 100644
+index 3ebad0f..5726de7 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
 @@ -53,11 +53,12 @@ static void xdl_free_classifier(xdlclassifier_t *cf);
@@ -17,7 +17,7 @@ index 3ebad0f..9178626 100644
  static int xdl_optimize_ctxs(xdfile_t *xdf1, xdfile_t *xdf2);
  
  
-@@ -130,8 +131,39 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -130,8 +131,56 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  }
  
  
@@ -26,25 +26,42 @@ index 3ebad0f..9178626 100644
 + */
 +static int xdl_trim_ends(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
 +			 xdfile_t *xdf1, xdfile_t *xdf2) {
-+	long i;
++
++	const int blk = 128;
++	long trimmed = 0, recovered = 0;
++	long smaller = XDL_MIN(mf1->size, mf2->size);
++	char const *p1, *p2;
 +	char const *cur, *top;
 +	char const *prev1, *prev2;
 +
-+	prev1 = xdf1->rstart = cur = mf1->ptr;
-+	prev2 = xdf2->rstart = mf2->ptr;
++	/* part 1: blocks */
++	p1 = mf1->ptr;
++	p2 = mf2->ptr;
++
++	while (blk + trimmed <= smaller && !memcmp(p1, p2, blk)) {
++		trimmed += blk;
++		p1 += blk;
++		p2 += blk;
++	}
++
++	while (recovered < trimmed)
++		if (*(p1 - recovered++) == '\n')
++			break;
++	p1 -= recovered;
++	p2 -= recovered;
++
++	prev1 = xdf1->rstart = cur = p1;
++	prev2 = xdf2->rstart = p2;
 +
-+	top = cur + XDL_MIN(mf1->size, mf2->size);
++	top = cur + smaller - trimmed + recovered;
 +
-+	/* TODO: trim on whitespace rules */
-+	i = 0;
++	/* part 2: line based */
 +	while (cur < top
 +		&& (cur = memchr(cur, '\n', top - cur))
 +		&& !memcmp(prev1, prev2, cur - prev1)) {
 +		prev2 += ++cur - prev1;
 +		prev1 = cur;
-+		i++;
 +	}
-+	xdf1->dstart = xdf2->dstart = i;
 +	xdf1->rstart = prev1;
 +	xdf2->rstart = prev2;
 +
@@ -58,7 +75,11 @@ index 3ebad0f..9178626 100644
  	unsigned int hbits;
  	long nrec, hsize, bsize;
  	unsigned long hav;
-@@ -164,7 +196,14 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -161,10 +210,19 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 	memset(rhash, 0, hsize * sizeof(xrecord_t *));
+ 
+ 	nrec = 0;
++	xdf->dstart = 0;
  	if ((cur = blk = xdl_mmfile_first(mf, &bsize)) != NULL) {
  		for (top = blk + bsize; cur < top; ) {
  			prev = cur;
@@ -69,12 +90,13 @@ index 3ebad0f..9178626 100644
 +				else
 +					cur = memchr(cur, '\n', top - cur) + 1;
 +				hav = 0;
++				xdf->dstart++;
 +			} else
 +				hav = xdl_hash_record(&cur, top, xpp->flags);
  			if (nrec >= narec) {
  				narec *= 2;
  				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
-@@ -178,7 +217,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -178,7 +236,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  			crec->ha = hav;
  			recs[nrec++] = crec;
  
@@ -83,7 +105,7 @@ index 3ebad0f..9178626 100644
  				goto abort;
  		}
  	}
-@@ -200,7 +239,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -200,7 +258,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	xdf->rindex = rindex;
  	xdf->nreff = 0;
  	xdf->ha = ha;
@@ -91,28 +113,28 @@ index 3ebad0f..9178626 100644
  	xdf->dend = nrec - 1;
  
  	return 0;
-@@ -240,12 +278,18 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
+@@ -240,12 +297,18 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
  
 -	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {
 +	if (xdl_trim_ends(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2) < 0) {
-+
-+		xdl_free_classifier(&cf);
-+		return -1;
-+	}
-+
-+	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL) < 0) {
  
  		xdl_free_classifier(&cf);
  		return -1;
  	}
 -	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2) < 0) {
++
++	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL) < 0) {
++
++		xdl_free_classifier(&cf);
++		return -1;
++	}
 +	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, xe->xdf1.recs) < 0) {
  
  		xdl_free_ctx(&xe->xdf1);
  		xdl_free_classifier(&cf);
-@@ -403,39 +447,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -403,39 +466,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
-- 
1.7.4.msysgit.0

