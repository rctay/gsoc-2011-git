From 425b6f1bbe2d7f9c688e19aba8315dcbd7f65996 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 23:56:40 +0800
Subject: [PATCH 095/130] xdl_prepare_ctx: one less memchr()

---
 guilt/gsoc-diff/trim-ends |   43 +++++++++++++++++++++++++++++++------------
 1 files changed, 31 insertions(+), 12 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index 3fe2e9b..f3312ab 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,8 +1,13 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..e55c43d 100644
+index 3ebad0f..94cad7f 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
-@@ -57,7 +57,8 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -53,11 +53,12 @@ static void xdl_free_classifier(xdlclassifier_t *cf);
+ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned int hbits,
+ 			       xrecord_t *rec);
+ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+-			   xdlclassifier_t *cf, xdfile_t *xdf);
++			   xdlclassifier_t *cf, xdfile_t *xdf, xrecord_t **arec);
  static void xdl_free_ctx(xdfile_t *xdf);
  static int xdl_clean_mmatch(char const *dis, long i, long s, long e);
  static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2);
@@ -12,7 +17,7 @@ index 3ebad0f..e55c43d 100644
  static int xdl_optimize_ctxs(xdfile_t *xdf1, xdfile_t *xdf2);
  
  
-@@ -130,6 +131,37 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -130,8 +131,39 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  }
  
  
@@ -48,23 +53,29 @@ index 3ebad0f..e55c43d 100644
 +
 +
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
- 			   xdlclassifier_t *cf, xdfile_t *xdf) {
+-			   xdlclassifier_t *cf, xdfile_t *xdf) {
++			   xdlclassifier_t *cf, xdfile_t *xdf, xrecord_t **arec) {
  	unsigned int hbits;
-@@ -164,7 +196,12 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 	long nrec, hsize, bsize;
+ 	unsigned long hav;
+@@ -164,7 +196,15 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	if ((cur = blk = xdl_mmfile_first(mf, &bsize)) != NULL) {
  		for (top = blk + bsize; cur < top; ) {
  			prev = cur;
 -			hav = xdl_hash_record(&cur, top, xpp->flags);
 +			if (cur < xdf->rstart) {
-+				cur = memchr(cur, '\n', top - cur);
-+				cur++;
++				if (arec) {
++					cur += arec[1]->ptr - arec[0]->ptr;
++					arec++;
++				} else
++					cur = memchr(cur, '\n', top - cur) + 1;
 +				hav = 0;
 +			} else
 +				hav = xdl_hash_record(&cur, top, xpp->flags);
  			if (nrec >= narec) {
  				narec *= 2;
  				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
-@@ -178,7 +215,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -178,7 +218,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  			crec->ha = hav;
  			recs[nrec++] = crec;
  
@@ -73,7 +84,7 @@ index 3ebad0f..e55c43d 100644
  				goto abort;
  		}
  	}
-@@ -200,7 +237,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -200,7 +240,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	xdf->rindex = rindex;
  	xdf->nreff = 0;
  	xdf->ha = ha;
@@ -81,20 +92,28 @@ index 3ebad0f..e55c43d 100644
  	xdf->dend = nrec - 1;
  
  	return 0;
-@@ -240,6 +276,12 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
+@@ -240,12 +279,18 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
  
+-	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {
 +	if (xdl_trim_ends(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2) < 0) {
 +
 +		xdl_free_classifier(&cf);
 +		return -1;
 +	}
 +
- 	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {
++	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL) < 0) {
+ 
+ 		xdl_free_classifier(&cf);
+ 		return -1;
+ 	}
+-	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2) < 0) {
++	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, xe->xdf1.recs) < 0) {
  
+ 		xdl_free_ctx(&xe->xdf1);
  		xdl_free_classifier(&cf);
-@@ -403,39 +445,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -403,39 +448,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
-- 
1.7.4.msysgit.0

