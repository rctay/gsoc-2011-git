From 6edf7a121766e575bb2aca6d7817d80f17f563c2 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 23:59:51 +0800
Subject: [PATCH 103/130] don't dual-use dend

---
 guilt/gsoc-diff/trim-ends |   44 ++++++++++++++++++++++----------------------
 1 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index 8de5089..a764ac8 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,5 +1,5 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..7d5c411 100644
+index 3ebad0f..98f5766 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
 @@ -26,6 +26,7 @@
@@ -10,12 +10,13 @@ index 3ebad0f..7d5c411 100644
  
  
  typedef struct s_xdlclass {
-@@ -53,11 +54,10 @@ static void xdl_free_classifier(xdlclassifier_t *cf);
+@@ -53,11 +54,11 @@ static void xdl_free_classifier(xdlclassifier_t *cf);
  static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned int hbits,
  			       xrecord_t *rec);
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
 -			   xdlclassifier_t *cf, xdfile_t *xdf);
-+			   xdlclassifier_t *cf, xdfile_t *xdf, xrecord_t **arec);
++			   xdlclassifier_t *cf, xdfile_t *xdf,
++			   xrecord_t **arec, long *ntail);
  static void xdl_free_ctx(xdfile_t *xdf);
  static int xdl_clean_mmatch(char const *dis, long i, long s, long e);
  static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2);
@@ -23,7 +24,7 @@ index 3ebad0f..7d5c411 100644
  static int xdl_optimize_ctxs(xdfile_t *xdf1, xdfile_t *xdf2);
  
  
-@@ -102,9 +102,10 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -102,9 +103,10 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  	line = rec->ptr;
  	hi = (long) XDL_HASHLONG(rec->ha, cf->hbits);
  	for (rcrec = cf->rchash[hi]; rcrec; rcrec = rcrec->next)
@@ -36,7 +37,7 @@ index 3ebad0f..7d5c411 100644
  			break;
  
  	if (!rcrec) {
-@@ -130,10 +131,84 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -130,8 +132,83 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  }
  
  
@@ -116,24 +117,22 @@ index 3ebad0f..7d5c411 100644
 +
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
 -			   xdlclassifier_t *cf, xdfile_t *xdf) {
-+			   xdlclassifier_t *cf, xdfile_t *xdf, xrecord_t **arec) {
++			   xdlclassifier_t *cf, xdfile_t *xdf,
++			   xrecord_t **arec, long *ntail) {
  	unsigned int hbits;
--	long nrec, hsize, bsize;
-+	long nrec, ntail, hsize, bsize;
+ 	long nrec, hsize, bsize;
  	unsigned long hav;
- 	char const *blk, *cur, *top, *prev;
- 	xrecord_t *crec;
-@@ -161,10 +236,21 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -161,10 +238,21 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	memset(rhash, 0, hsize * sizeof(xrecord_t *));
  
  	nrec = 0;
-+	xdf->dstart = ntail = 0;
++	xdf->dstart = *ntail = 0;
  	if ((cur = blk = xdl_mmfile_first(mf, &bsize)) != NULL) {
  		for (top = blk + bsize; cur < top; ) {
  			prev = cur;
 -			hav = xdl_hash_record(&cur, top, xpp->flags);
 +			if (cur > xdf->rend)
-+				ntail++;
++				(*ntail)++;
 +			if (cur < xdf->rstart) {
 +				if (arec)
 +					cur += (arec++)[0]->size;
@@ -146,38 +145,39 @@ index 3ebad0f..7d5c411 100644
  			if (nrec >= narec) {
  				narec *= 2;
  				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
-@@ -200,8 +286,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -200,8 +288,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	xdf->rindex = rindex;
  	xdf->nreff = 0;
  	xdf->ha = ha;
 -	xdf->dstart = 0;
 -	xdf->dend = nrec - 1;
-+	xdf->dend = ntail;
  
  	return 0;
  
-@@ -229,6 +314,7 @@ static void xdl_free_ctx(xdfile_t *xdf) {
+@@ -229,7 +315,9 @@ static void xdl_free_ctx(xdfile_t *xdf) {
  
  int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		    xdfenv_t *xe) {
 +	long lim;
  	long enl1, enl2;
++	long ntail1, ntail2;
  	xdlclassifier_t cf;
  
-@@ -240,18 +326,24 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
+ 	enl1 = xdl_guess_lines(mf1) + 1;
+@@ -240,18 +328,24 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
  
 -	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1) < 0) {
 +	xdl_trim_head(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2);
 +
-+	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL) < 0) {
++	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL, &ntail1) < 0) {
  
  		xdl_free_classifier(&cf);
  		return -1;
  	}
 -	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2) < 0) {
-+	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, xe->xdf1.recs) < 0) {
++	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, xe->xdf1.recs, &ntail2) < 0) {
  
  		xdl_free_ctx(&xe->xdf1);
  		xdl_free_classifier(&cf);
@@ -185,13 +185,13 @@ index 3ebad0f..7d5c411 100644
  	}
  
 +	lim = XDL_MIN(xe->xdf1.nrec, xe->xdf2.nrec);
-+	xe->xdf1.dend = xe->xdf1.nrec - XDL_MIN(lim - xe->xdf1.dstart, xe->xdf1.dend) - 1;
-+	xe->xdf2.dend = xe->xdf2.nrec - XDL_MIN(lim - xe->xdf2.dstart, xe->xdf2.dend) - 1;
++	xe->xdf1.dend = xe->xdf1.nrec - XDL_MIN(lim - xe->xdf1.dstart, ntail1) - 1;
++	xe->xdf2.dend = xe->xdf2.nrec - XDL_MIN(lim - xe->xdf2.dstart, ntail2) - 1;
 +
  	xdl_free_classifier(&cf);
  
  	if (!(xpp->flags & XDF_PATIENCE_DIFF) &&
-@@ -403,39 +495,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -403,39 +497,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
-- 
1.7.4.msysgit.0

