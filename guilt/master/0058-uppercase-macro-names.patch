From f90b49df9cd0d1e751ea4831f3c454323037aa29 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 21:51:54 +0800
Subject: [PATCH 058/130] uppercase macro names

---
 guilt/gsoc-diff/teach-histogram |   34 +++++++++++++++++-----------------
 1 files changed, 17 insertions(+), 17 deletions(-)

diff --git a/guilt/gsoc-diff/teach-histogram b/guilt/gsoc-diff/teach-histogram
index fcad9ca..b82daab 100644
--- a/guilt/gsoc-diff/teach-histogram
+++ b/guilt/gsoc-diff/teach-histogram
@@ -108,7 +108,7 @@ index ad033a8..7a92ea9 100644
  #endif /* #if !defined(XDIFFI_H) */
 diff --git a/xdiff/xhistogram.c b/xdiff/xhistogram.c
 new file mode 100644
-index 0000000..585b5f0
+index 0000000..a5b5159
 --- /dev/null
 +++ b/xdiff/xhistogram.c
 @@ -0,0 +1,332 @@
@@ -158,7 +158,7 @@ index 0000000..585b5f0
 +#define CNT(index, ptr) \
 +	((LINE_MAP(index, ptr))->cnt)
 +
-+#define get_rec(env, s, l) \
++#define REC(env, s, l) \
 +	(env->xdf##s.recs[l-1])
 +
 +static int cmp_recs(xpparam_t const *xpp,
@@ -169,14 +169,14 @@ index 0000000..585b5f0
 +			    xpp->flags);
 +}
 +
-+#define cmp_env(xpp, env, s1, l1, s2, l2) \
-+	(cmp_recs(xpp, get_rec(env, s1, l1), get_rec(env, s2, l2)))
++#define CMP_ENV(xpp, env, s1, l1, s2, l2) \
++	(cmp_recs(xpp, REC(env, s1, l1), REC(env, s2, l2)))
 +
-+#define cmp(i, s1, l1, s2, l2) \
-+	(cmp_env(i->xpp, i->env, s1, l1, s2, l2))
++#define CMP(i, s1, l1, s2, l2) \
++	(CMP_ENV(i->xpp, i->env, s1, l1, s2, l2))
 +
-+#define table_hash(index, side, line) \
-+	XDL_HASHLONG((get_rec(index->env, side, line))->ha, index->table_bits)
++#define TABLE_HASH(index, side, line) \
++	XDL_HASHLONG((REC(index->env, side, line))->ha, index->table_bits)
 +
 +static int scanA(struct histindex *index, int line1, int count1)
 +{
@@ -185,13 +185,13 @@ index 0000000..585b5f0
 +	struct record **rec_chain, *rec;
 +
 +	for (ptr = LINE_END(1); line1 <= ptr; ptr--) {
-+		tbl_idx = table_hash(index, 1, ptr);
++		tbl_idx = TABLE_HASH(index, 1, ptr);
 +		rec_chain = index->records + tbl_idx;
 +		rec = *rec_chain;
 +
 +		chain_len = 0;
 +		while (rec) {
-+			if (cmp(index, 1, rec->ptr, 1, ptr)) {
++			if (CMP(index, 1, rec->ptr, 1, ptr)) {
 +				NEXT_PTR(index, ptr) = rec->ptr;
 +				rec->ptr = ptr;
 +				rec->cnt = XDL_MIN(MAX_CNT, rec->cnt + 1);
@@ -226,19 +226,19 @@ index 0000000..585b5f0
 +	int line1, int count1, int line2, int count2)
 +{
 +	unsigned int b_next = b_ptr + 1;
-+	struct record *rec = index->records[table_hash(index, 2, b_ptr)];
++	struct record *rec = index->records[TABLE_HASH(index, 2, b_ptr)];
 +	unsigned int as, ae, bs, be, np, rc;
 +	int should_break;
 +
 +	for (; rec; rec = rec->next) {
 +		if (rec->cnt > index->cnt) {
 +			if (!index->has_common)
-+				index->has_common = cmp(index, 1, rec->ptr, 2, b_ptr);
++				index->has_common = CMP(index, 1, rec->ptr, 2, b_ptr);
 +			continue;
 +		}
 +
 +		as = rec->ptr;
-+		if (!cmp(index, 1, as, 2, b_ptr))
++		if (!CMP(index, 1, as, 2, b_ptr))
 +			continue;
 +
 +		index->has_common = 1;
@@ -251,14 +251,14 @@ index 0000000..585b5f0
 +			rc = rec->cnt;
 +
 +			while (line1 < as && line2 < bs
-+				&& cmp(index, 1, as-1, 2, bs-1)) {
++				&& CMP(index, 1, as-1, 2, bs-1)) {
 +				as--;
 +				bs--;
 +				if (1 < rc)
 +					rc = XDL_MIN(rc, CNT(index, as));
 +			}
 +			while (ae < LINE_END(1) && be < LINE_END(2)
-+				&& cmp(index, 1, ae+1, 2, be+1)) {
++				&& CMP(index, 1, ae+1, 2, be+1)) {
 +				ae++;
 +				be++;
 +				if (1 < rc)
@@ -315,13 +315,13 @@ index 0000000..585b5f0
 +{
 +	if (*count1 <= 1 || *count2 <= 1)
 +		return;
-+	while (*count1 > 1 && *count2 > 1 && cmp_env(xpp, env, 1, *line1, 2, *line2)) {
++	while (*count1 > 1 && *count2 > 1 && CMP_ENV(xpp, env, 1, *line1, 2, *line2)) {
 +		(*line1)++;
 +		(*count1)--;
 +		(*line2)++;
 +		(*count2)--;
 +	}
-+	while (*count1 > 1 && *count2 > 1 && cmp_env(xpp, env, 1, LINE_END_PTR(1), 2, LINE_END_PTR(2))) {
++	while (*count1 > 1 && *count2 > 1 && CMP_ENV(xpp, env, 1, LINE_END_PTR(1), 2, LINE_END_PTR(2))) {
 +		(*count1)--;
 +		(*count2)--;
 +	}
-- 
1.7.4.msysgit.0

