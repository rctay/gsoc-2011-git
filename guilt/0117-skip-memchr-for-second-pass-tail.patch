From 483f84c190bbb3bd92e908942846653f39eef045 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Mon, 1 Aug 2011 00:07:20 +0800
Subject: [PATCH 117/130] skip memchr() for second pass tail

---
 guilt/gsoc-diff/trim-ends |   40 +++++++++++++++++++++++-----------------
 1 files changed, 23 insertions(+), 17 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index 0a39993..cc55d31 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,5 +1,5 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..e7b9632 100644
+index 3ebad0f..2548fc2 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
 @@ -26,6 +26,7 @@
@@ -15,8 +15,8 @@ index 3ebad0f..e7b9632 100644
  			       xrecord_t *rec);
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
 -			   xdlclassifier_t *cf, xdfile_t *xdf);
-+			   xdlclassifier_t *cf, xdfile_t *xdf,
-+			   xrecord_t **arec, long *ntail);
++			   xdlclassifier_t *cf, xdfile_t *xdf, long *ntail,
++			   xrecord_t **arec, xrecord_t **brec);
  static void xdl_free_ctx(xdfile_t *xdf);
  static int xdl_clean_mmatch(char const *dis, long i, long s, long e);
  static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2);
@@ -173,12 +173,12 @@ index 3ebad0f..e7b9632 100644
 +
  static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
 -			   xdlclassifier_t *cf, xdfile_t *xdf) {
-+			   xdlclassifier_t *cf, xdfile_t *xdf,
-+			   xrecord_t **arec, long *ntail) {
++			   xdlclassifier_t *cf, xdfile_t *xdf, long *ntail,
++			   xrecord_t **arec, xrecord_t **brec) {
  	unsigned int hbits;
  	long nrec, hsize, bsize;
  	unsigned long hav;
-@@ -155,16 +267,32 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -155,16 +267,36 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  		goto abort;
  
  	hbits = xdl_hashbits((unsigned int) narec);
@@ -205,8 +205,12 @@ index 3ebad0f..e7b9632 100644
 +				hav = 0;
 +				xdf->dstart++;
 +			} else if (cur > xdf->rend) {
-+				cur = memchr(cur, '\n', top - cur);
-+				cur = cur ? cur + 1 : top;
++				if (brec)
++					cur += (brec++)[0]->size;
++				else {
++					cur = memchr(cur, '\n', top - cur);
++					cur = cur ? cur + 1 : top;
++				}
 +				hav = 0;
 +				(*ntail)++;
 +			} else
@@ -214,7 +218,7 @@ index 3ebad0f..e7b9632 100644
  			if (nrec >= narec) {
  				narec *= 2;
  				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
-@@ -178,7 +306,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -178,7 +310,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  			crec->ha = hav;
  			recs[nrec++] = crec;
  
@@ -223,7 +227,7 @@ index 3ebad0f..e7b9632 100644
  				goto abort;
  		}
  	}
-@@ -200,8 +328,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -200,8 +332,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	xdf->rindex = rindex;
  	xdf->nreff = 0;
  	xdf->ha = ha;
@@ -232,7 +236,7 @@ index 3ebad0f..e7b9632 100644
  
  	return 0;
  
-@@ -229,7 +355,9 @@ static void xdl_free_ctx(xdfile_t *xdf) {
+@@ -229,7 +359,9 @@ static void xdl_free_ctx(xdfile_t *xdf) {
  
  int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		    xdfenv_t *xe) {
@@ -242,7 +246,7 @@ index 3ebad0f..e7b9632 100644
  	xdlclassifier_t cf;
  
  	enl1 = xdl_guess_lines(mf1) + 1;
-@@ -240,18 +368,25 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
+@@ -240,18 +372,27 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
  
@@ -250,13 +254,15 @@ index 3ebad0f..e7b9632 100644
 +	xdl_trim_head(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2);
 +	xdl_trim_tail(mf1, mf2, xpp, &xe->xdf1, &xe->xdf2);
 +
-+	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, NULL, &ntail1) < 0) {
++	if (xdl_prepare_ctx(mf1, enl1, xpp, &cf, &xe->xdf1, &ntail1,
++		NULL, NULL) < 0) {
  
  		xdl_free_classifier(&cf);
  		return -1;
  	}
 -	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2) < 0) {
-+	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, xe->xdf1.recs, &ntail2) < 0) {
++	if (xdl_prepare_ctx(mf2, enl2, xpp, &cf, &xe->xdf2, &ntail2,
++		xe->xdf1.recs, xe->xdf1.recs + xe->xdf1.nrec - ntail1) < 0) {
  
  		xdl_free_ctx(&xe->xdf1);
  		xdl_free_classifier(&cf);
@@ -270,7 +276,7 @@ index 3ebad0f..e7b9632 100644
  	xdl_free_classifier(&cf);
  
  	if (!(xpp->flags & XDF_PATIENCE_DIFF) &&
-@@ -355,7 +490,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -355,7 +496,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  		mlim = XDL_MAX_EQLIMIT;
  	for (i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]; i <= xdf1->dend; i++, recs++) {
  		hav = (*recs)->ha;
@@ -279,7 +285,7 @@ index 3ebad0f..e7b9632 100644
  		for (nm = 0, rec = xdf2->rhash[rhi]; rec; rec = rec->next)
  			if (rec->ha == hav && ++nm == mlim)
  				break;
-@@ -366,7 +501,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -366,7 +507,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  		mlim = XDL_MAX_EQLIMIT;
  	for (i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]; i <= xdf2->dend; i++, recs++) {
  		hav = (*recs)->ha;
@@ -288,7 +294,7 @@ index 3ebad0f..e7b9632 100644
  		for (nm = 0, rec = xdf1->rhash[rhi]; rec; rec = rec->next)
  			if (rec->ha == hav && ++nm == mlim)
  				break;
-@@ -403,39 +538,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -403,39 +544,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
-- 
1.7.4.msysgit.0

