From 4721944c91628258f4ba03fb75da62f6937535d4 Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Sun, 31 Jul 2011 21:02:49 +0800
Subject: [PATCH 010/130] import tg/gsoc-diff/002-refactor-abort (8ba60f3)

---
 guilt/gsoc-diff/refactor-abort |  141 ++++++++++++++++++++++++++++++++++++++++
 guilt/gsoc-diff/series         |    1 +
 2 files changed, 142 insertions(+), 0 deletions(-)
 create mode 100644 guilt/gsoc-diff/refactor-abort

diff --git a/guilt/gsoc-diff/refactor-abort b/guilt/gsoc-diff/refactor-abort
new file mode 100644
index 0000000..b20defe
--- /dev/null
+++ b/guilt/gsoc-diff/refactor-abort
@@ -0,0 +1,141 @@
+xdiff/xprepare: refactor abort cleanups
+
+Group free()'s that are called when a malloc() fails in
+xdl_prepare_ctx(), making for more readable code.
+
+Also add a free() on ha, in case future git hackers add allocs after the
+ha malloc.
+
+Signed-off-by: Tay Ray Chuan <rctay89@gmail.com>
+diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
+index 49c7e8a..3ebad0f 100644
+--- a/xdiff/xprepare.c
++++ b/xdiff/xprepare.c
+@@ -143,24 +143,21 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 	char *rchg;
+ 	long *rindex;
+ 
+-	if (xdl_cha_init(&xdf->rcha, sizeof(xrecord_t), narec / 4 + 1) < 0) {
++	ha = NULL;
++	rindex = NULL;
++	rchg = NULL;
++	rhash = NULL;
++	recs = NULL;
+ 
+-		return -1;
+-	}
+-	if (!(recs = (xrecord_t **) xdl_malloc(narec * sizeof(xrecord_t *)))) {
+-
+-		xdl_cha_free(&xdf->rcha);
+-		return -1;
+-	}
++	if (xdl_cha_init(&xdf->rcha, sizeof(xrecord_t), narec / 4 + 1) < 0)
++		goto abort;
++	if (!(recs = (xrecord_t **) xdl_malloc(narec * sizeof(xrecord_t *))))
++		goto abort;
+ 
+ 	hbits = xdl_hashbits((unsigned int) narec);
+ 	hsize = 1 << hbits;
+-	if (!(rhash = (xrecord_t **) xdl_malloc(hsize * sizeof(xrecord_t *)))) {
+-
+-		xdl_free(recs);
+-		xdl_cha_free(&xdf->rcha);
+-		return -1;
+-	}
++	if (!(rhash = (xrecord_t **) xdl_malloc(hsize * sizeof(xrecord_t *))))
++		goto abort;
+ 	memset(rhash, 0, hsize * sizeof(xrecord_t *));
+ 
+ 	nrec = 0;
+@@ -170,63 +167,30 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 			hav = xdl_hash_record(&cur, top, xpp->flags);
+ 			if (nrec >= narec) {
+ 				narec *= 2;
+-				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *)))) {
+-
+-					xdl_free(rhash);
+-					xdl_free(recs);
+-					xdl_cha_free(&xdf->rcha);
+-					return -1;
+-				}
++				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
++					goto abort;
+ 				recs = rrecs;
+ 			}
+-			if (!(crec = xdl_cha_alloc(&xdf->rcha))) {
+-
+-				xdl_free(rhash);
+-				xdl_free(recs);
+-				xdl_cha_free(&xdf->rcha);
+-				return -1;
+-			}
++			if (!(crec = xdl_cha_alloc(&xdf->rcha)))
++				goto abort;
+ 			crec->ptr = prev;
+ 			crec->size = (long) (cur - prev);
+ 			crec->ha = hav;
+ 			recs[nrec++] = crec;
+ 
+-			if (xdl_classify_record(cf, rhash, hbits, crec) < 0) {
+-
+-				xdl_free(rhash);
+-				xdl_free(recs);
+-				xdl_cha_free(&xdf->rcha);
+-				return -1;
+-			}
++			if (xdl_classify_record(cf, rhash, hbits, crec) < 0)
++				goto abort;
+ 		}
+ 	}
+ 
+-	if (!(rchg = (char *) xdl_malloc((nrec + 2) * sizeof(char)))) {
+-
+-		xdl_free(rhash);
+-		xdl_free(recs);
+-		xdl_cha_free(&xdf->rcha);
+-		return -1;
+-	}
++	if (!(rchg = (char *) xdl_malloc((nrec + 2) * sizeof(char))))
++		goto abort;
+ 	memset(rchg, 0, (nrec + 2) * sizeof(char));
+ 
+-	if (!(rindex = (long *) xdl_malloc((nrec + 1) * sizeof(long)))) {
+-
+-		xdl_free(rchg);
+-		xdl_free(rhash);
+-		xdl_free(recs);
+-		xdl_cha_free(&xdf->rcha);
+-		return -1;
+-	}
+-	if (!(ha = (unsigned long *) xdl_malloc((nrec + 1) * sizeof(unsigned long)))) {
+-
+-		xdl_free(rindex);
+-		xdl_free(rchg);
+-		xdl_free(rhash);
+-		xdl_free(recs);
+-		xdl_cha_free(&xdf->rcha);
+-		return -1;
+-	}
++	if (!(rindex = (long *) xdl_malloc((nrec + 1) * sizeof(long))))
++		goto abort;
++	if (!(ha = (unsigned long *) xdl_malloc((nrec + 1) * sizeof(unsigned long))))
++		goto abort;
+ 
+ 	xdf->nrec = nrec;
+ 	xdf->recs = recs;
+@@ -240,6 +204,15 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+ 	xdf->dend = nrec - 1;
+ 
+ 	return 0;
++
++abort:
++	xdl_free(ha);
++	xdl_free(rindex);
++	xdl_free(rchg);
++	xdl_free(rhash);
++	xdl_free(recs);
++	xdl_cha_free(&xdf->rcha);
++	return -1;
+ }
+ 
+ 
diff --git a/guilt/gsoc-diff/series b/guilt/gsoc-diff/series
index 6b6c1e6..f5b86da 100644
--- a/guilt/gsoc-diff/series
+++ b/guilt/gsoc-diff/series
@@ -1,2 +1,3 @@
 use-memset
 remove-mmfile_next
+refactor-abort
-- 
1.7.4.msysgit.0

