From e351dee13c626aad0de52e3b79c5e4453f84946c Mon Sep 17 00:00:00 2001
From: Tay Ray Chuan <rctay89@gmail.com>
Date: Mon, 1 Aug 2011 00:07:16 +0800
Subject: [PATCH 116/130] handle case where xdf2->rend < xdf2->rstart

---
 guilt/gsoc-diff/trim-ends |   34 ++++++++++++++++++----------------
 1 files changed, 18 insertions(+), 16 deletions(-)

diff --git a/guilt/gsoc-diff/trim-ends b/guilt/gsoc-diff/trim-ends
index 956ea01..0a39993 100644
--- a/guilt/gsoc-diff/trim-ends
+++ b/guilt/gsoc-diff/trim-ends
@@ -1,5 +1,5 @@
 diff --git a/xdiff/xprepare.c b/xdiff/xprepare.c
-index 3ebad0f..8e1e3a9 100644
+index 3ebad0f..e7b9632 100644
 --- a/xdiff/xprepare.c
 +++ b/xdiff/xprepare.c
 @@ -26,6 +26,7 @@
@@ -58,7 +58,7 @@ index 3ebad0f..8e1e3a9 100644
  	rec->next = rhash[hi];
  	rhash[hi] = rec;
  
-@@ -130,8 +132,116 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
+@@ -130,8 +132,118 @@ static int xdl_classify_record(xdlclassifier_t *cf, xrecord_t **rhash, unsigned
  }
  
  
@@ -138,13 +138,15 @@ index 3ebad0f..8e1e3a9 100644
 +		p2 -= blk;
 +	}
 +
-+	if (p1 < xdf1->rstart) {
-+		p2 += xdf1->rstart - p1;
-+		p1 = xdf1->rstart;
-+	}
++	/* ensure that rend >= rstart */
++	blk = 0;
++	if (p1 < xdf1->rstart)
++		blk = xdf1->rstart - p1;
++	else if (p2 < xdf2->rstart)
++		blk = xdf2->rstart - p2;
 +
-+	xdf1->rend = p1;
-+	xdf2->rend = p2;
++	xdf1->rend = p1 + blk;
++	xdf2->rend = p2 + blk;
 +}
 +
 +
@@ -176,7 +178,7 @@ index 3ebad0f..8e1e3a9 100644
  	unsigned int hbits;
  	long nrec, hsize, bsize;
  	unsigned long hav;
-@@ -155,16 +265,32 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -155,16 +267,32 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  		goto abort;
  
  	hbits = xdl_hashbits((unsigned int) narec);
@@ -212,7 +214,7 @@ index 3ebad0f..8e1e3a9 100644
  			if (nrec >= narec) {
  				narec *= 2;
  				if (!(rrecs = (xrecord_t **) xdl_realloc(recs, narec * sizeof(xrecord_t *))))
-@@ -178,7 +304,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -178,7 +306,7 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  			crec->ha = hav;
  			recs[nrec++] = crec;
  
@@ -221,7 +223,7 @@ index 3ebad0f..8e1e3a9 100644
  				goto abort;
  		}
  	}
-@@ -200,8 +326,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
+@@ -200,8 +328,6 @@ static int xdl_prepare_ctx(mmfile_t *mf, long narec, xpparam_t const *xpp,
  	xdf->rindex = rindex;
  	xdf->nreff = 0;
  	xdf->ha = ha;
@@ -230,7 +232,7 @@ index 3ebad0f..8e1e3a9 100644
  
  	return 0;
  
-@@ -229,7 +353,9 @@ static void xdl_free_ctx(xdfile_t *xdf) {
+@@ -229,7 +355,9 @@ static void xdl_free_ctx(xdfile_t *xdf) {
  
  int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		    xdfenv_t *xe) {
@@ -240,7 +242,7 @@ index 3ebad0f..8e1e3a9 100644
  	xdlclassifier_t cf;
  
  	enl1 = xdl_guess_lines(mf1) + 1;
-@@ -240,18 +366,25 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
+@@ -240,18 +368,25 @@ int xdl_prepare_env(mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp,
  		return -1;
  	}
  
@@ -268,7 +270,7 @@ index 3ebad0f..8e1e3a9 100644
  	xdl_free_classifier(&cf);
  
  	if (!(xpp->flags & XDF_PATIENCE_DIFF) &&
-@@ -355,7 +488,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -355,7 +490,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  		mlim = XDL_MAX_EQLIMIT;
  	for (i = xdf1->dstart, recs = &xdf1->recs[xdf1->dstart]; i <= xdf1->dend; i++, recs++) {
  		hav = (*recs)->ha;
@@ -277,7 +279,7 @@ index 3ebad0f..8e1e3a9 100644
  		for (nm = 0, rec = xdf2->rhash[rhi]; rec; rec = rec->next)
  			if (rec->ha == hav && ++nm == mlim)
  				break;
-@@ -366,7 +499,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -366,7 +501,7 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  		mlim = XDL_MAX_EQLIMIT;
  	for (i = xdf2->dstart, recs = &xdf2->recs[xdf2->dstart]; i <= xdf2->dend; i++, recs++) {
  		hav = (*recs)->ha;
@@ -286,7 +288,7 @@ index 3ebad0f..8e1e3a9 100644
  		for (nm = 0, rec = xdf1->rhash[rhi]; rec; rec = rec->next)
  			if (rec->ha == hav && ++nm == mlim)
  				break;
-@@ -403,39 +536,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
+@@ -403,39 +538,9 @@ static int xdl_cleanup_records(xdfile_t *xdf1, xdfile_t *xdf2) {
  }
  
  
-- 
1.7.4.msysgit.0

